---
# tasks file for monitor-bootstrap

- name: Making sure that some required directories exist
  file:
     path: "{{ item }}"
     state: directory
  with_items:
  - /etc/ceph
  - /var/lib/ceph/bootstrap-osd
  - "/var/lib/ceph/mon/ceph-{{ inventory_hostname }}"
  - "/var/lib/ceph/mgr/ceph-{{ inventory_hostname }}"

- name: Setting some facts to be used when bootstrapping ceph
  set_fact:
     ceph_mon_members: "{{ groups['ceph_mons'] | join(',') }}"
     ceph_mon_members_ips: "{{ groups['ceph_mons'] | map('extract', hostvars, ['ansible_facts','eth1','ipv4','address']) | list | join(',') }}"

- name: Creating ceph.conf in the ceph monitors
  template:
     src: ceph.conf.j2
     dest: /etc/ceph/ceph.conf
     backup: yes

- block:

   - name: Checking if the file /tmp/ceph.mon.keyring exists
     stat:
        path: /tmp/ceph.mon.keyring
     register: mon_keyring
   
   - name: Create a keyring for the cluster and generate a monitor secret key
     shell:
        cmd: ceph-authtool --create-keyring /tmp/ceph.mon.keyring --gen-key -n mon. --cap mon 'allow *'
     when: not mon_keyring.stat.exists
   
   - name: Checking if the file /etc/ceph/ceph.client.admin.keyring exists
     stat:
        path: /etc/ceph/ceph.client.admin.keyring
     register: admin_keyring
   
   - name: Generate an administrator keyring, generate a client.admin user and add the user to the keyring.
     shell:
        cmd: >
           ceph-authtool --create-keyring /etc/ceph/ceph.client.admin.keyring --gen-key -n client.admin 
           --cap mon 'allow *' --cap osd 'allow *' --cap mds 'allow *' --cap mgr 'allow *'
     when: not admin_keyring.stat.exists
   
   - name: Checking if file /var/lib/ceph/bootstrap-osd/ceph.keyring exists
     stat:
        path: /var/lib/ceph/bootstrap-osd/ceph.keyring
     register: ceph_osd_keyring
   
   - name: Generate a bootstrap-osd keyring, generate a client.bootstrap-osd user and add the user to the keyring.
     shell:
        cmd: >
           ceph-authtool --create-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring --gen-key -n client.bootstrap-osd
           --cap mon 'profile bootstrap-osd' --cap mgr 'allow r'
     when: not ceph_osd_keyring.stat.exists
   
   - name: Add the generated keys to the ceph.mon.keyring
     shell:
        cmd: ceph-authtool /tmp/ceph.mon.keyring --import-keyring /etc/ceph/ceph.client.admin.keyring
   
   - name: Add the generated keys to the ceph.mon.keyring
     shell:
        cmd: ceph-authtool /tmp/ceph.mon.keyring --import-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring
   
   - name: Copying the ceph keyring files to the ceph nodes
     synchronize:
        src: "{{ item }}"
        dest: "{{ item }}"
     with_items:
     - /tmp/ceph.mon.keyring
     - /var/lib/ceph/bootstrap-osd/ceph.keyring
     - /etc/ceph/ceph.client.admin.keyring

  delegate_to: "{{ ceph_deployment_node }}"

- name: Setting permissions on /tmp/ceph.mon.keyring
  file:
     owner: ceph
     group: ceph
     path: /tmp/ceph.mon.keyring

- name: Checking if monitor map exists on the monitor ceph nodes
  stat:
     path: /tmp/monmap
  register: monitor_map

- name: Generate a monitor map using the hostname(s), host IP address(es) and the FSID
  shell:
     cmd: >
        monmaptool --create
        {% for mon in groups['ceph_mons'] %} --add {{ mon }} 
        {{ hostvars[mon]['ansible_facts']['eth1']['ipv4']['address'] }} 
        {% endfor %} --fsid {{ ceph_fsid }} /tmp/monmap
  when: not monitor_map.stat.exists

- name: Checking if /var/lib/ceph/mon/ceph-{{ inventory_hostname }} exists
  stat:
     path: "/var/lib/ceph/mon/ceph-{{ inventory_hostname }}"

- name: Populate the monitor daemon(s) with the monitor map and keyring
  shell:
     cmd: ceph-mon --mkfs -i {{ inventory_hostname }} --monmap /tmp/monmap --keyring /tmp/ceph.mon.keyring

- name: Fixing permissions in directory /var/lib/ceph/mon/ceph-{{ inventory_hostname }}
  file:
     owner: ceph
     group: ceph
     path: "/var/lib/ceph/mon/ceph-{{ inventory_hostname }}"
     recurse: yes

- name: Start the monitor(s).
  systemd:
     state: started
     name: "ceph-mon@{{ inventory_hostname }}"
     enabled: yes

- name: Creating authentication keys for the ceph-mgr daemons
  shell:
     cmd: ceph auth get-or-create mgr.{{ inventory_hostname }} mon 'allow profile mgr' osd 'allow *' mds 'allow *'
  register: ceph_mgrkey

- name: Placing the ceph-mgr key into the mgr data directory
  copy:
     content: "{{ ceph_mgrkey.stdout }}\n"
     dest: "/var/lib/ceph/mgr/ceph-{{ inventory_hostname }}/keyring"
     owner: ceph
     group: ceph

- name: Start the manager daemon(s)
  systemd:
     state: started
     name: "ceph-mgr@{{ inventory_hostname }}"
     enabled: yes
