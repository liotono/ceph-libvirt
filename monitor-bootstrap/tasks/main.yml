---
# tasks file for monitor-bootstrap

- name: Making sure that some required directories exist
  file:
     path: "{{ item }}"
     state: directory
  with_items:
  - /etc/ceph
  - /var/lib/ceph/bootstrap-osd
  - "/var/lib/ceph/mon/ceph-{{ inventory_hostname }}"

- name: Setting some facts to be used when bootstrapping ceph
  set_fact:
     ceph_mon_members: "{{ groups['ceph_mons'] | join(',') }}"
     ceph_mon_members_ips: "{{ groups['ceph_mons'] | map('extract', hostvars, ['ansible_facts','eth1','ipv4','address']) | list | join(',') }}"

- name: Creating ceph.conf in the ceph monitors
  template:
     src: ceph.conf.j2
     dest: /etc/ceph/ceph.conf

- name: Create a keyring for the cluster and generate a monitor secret key
  shell:
     cmd: ceph-authtool --create-keyring /tmp/ceph.mon.keyring --gen-key -n mon. --cap mon 'allow *'
  delegate_to: "{{ ceph_deployment_node }}"

- name: Generate an administrator keyring, generate a client.admin user and add the user to the keyring.
  shell:
     cmd: ceph-authtool --create-keyring /etc/ceph/ceph.client.admin.keyring --gen-key -n client.admin --cap mon 'allow *' --cap osd 'allow *' --cap mds 'allow *' --cap mgr 'allow *'
  delegate_to: "{{ ceph_deployment_node }}"

- name: Generate a bootstrap-osd keyring, generate a client.bootstrap-osd user and add the user to the keyring.
  shell:
     cmd: ceph-authtool --create-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring --gen-key -n client.bootstrap-osd --cap mon 'profile bootstrap-osd' --cap mgr 'allow r'
  delegate_to: "{{ ceph_deployment_node }}"

- name: Add the generated keys to the ceph.mon.keyring
  shell:
     cmd: ceph-authtool /tmp/ceph.mon.keyring --import-keyring /etc/ceph/ceph.client.admin.keyring
  delegate_to: "{{ ceph_deployment_node }}"

- name: Add the generated keys to the ceph.mon.keyring
  shell:
     cmd: ceph-authtool /tmp/ceph.mon.keyring --import-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring
  delegate_to: "{{ ceph_deployment_node }}"

- name: Copying the ceph keyring files to the ceph nodes
  synchronize:
     src: "{{ item }}"
     dest: "{{ item }}"
  with_items:
  - /tmp/ceph.mon.keyring
  - /var/lib/ceph/bootstrap-osd/ceph.keyring
    # - /etc/ceph/ceph.client.admin.keyring 
  delegate_to: "{{ ceph_deployment_node }}"

- name: Setting permissions on /tmp/ceph.mon.keyring
  file:
     owner: ceph
     group: ceph
     path: /tmp/ceph.mon.keyring

- name: Generate a monitor map using the hostname(s), host IP address(es) and the FSID
  shell:
     cmd: monmaptool --create {% for mon in groups['ceph_mons'] %} --add {{ mon }} {{ hostvars[mon]['ansible_facts']['eth1']['ipv4']['address'] }} {% endfor %} --fsid {{ ceph_fsid }} /tmp/monmap

- name: Populate the monitor daemon(s) with the monitor map and keyring
  shell:
     cmd: ceph-mon --mkfs -i {{ inventory_hostname }} --monmap /tmp/monmap --keyring /tmp/ceph.mon.keyring

- name: Fixing permissions in directory /var/lib/ceph/mon/ceph-{{ inventory_hostname }}
  file:
     owner: ceph
     group: ceph
     path: "{{ item }}"
     recurse: yes
  with_items:
  - "/var/lib/ceph/mon/ceph-{{ inventory_hostname }}"
    # - /etc/ceph/

- name: Start the monitor(s).
  systemd:
     state: started
     name: "ceph-mon@{{ inventory_hostname }}"
